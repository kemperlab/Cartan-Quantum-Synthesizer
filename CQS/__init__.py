"""
Welcome to the Cartan Quantum Synthesizer package. For useage examples, please see package.util.examples or the README


## General Usage:
This package makes use of three object classes: The Hamiltonian, the Cartan, and the FindParameters objects.

<ol>
    <li> <code>Hamiltonian</code>: The Hamiltonian object is used to construct information about the model that you wish to simulate. There are predefined models that can be used for example implementation, the user can define a custom Hamiltonian and pass it to the object, the user can combine existing Hamiltonians to generate the desired Hamiltonian (ex. XY + transverse field), or the user can define their own input. This is designed to be relatively straightforward, and the other definitions can serve as examples </li>
    <li> <code>Cartan</code>: The Cartan object is used to define a cartan decomposition on the "Hamiltonian Algebra" generated by Hamiltonian object. The "Hamiltonian Algebra, g(H) or g, is defined as the set of Pauli Strings that can be generated through nested commutators on the Hamiltonian. Thus, g(H) is a closed Lie algebra. We can then perform a Cartan decomposition, which splits g into two components, k and m, based on some involution. The Cartan object has a list of predefined Cartan involutions, although users are encouraged to add an name their own implementations. Finally, the Hamiltonian algebra has as Cartan Subalgebra h, which is a maximal abelian subalgebra that is contained within the m partition. This is generated by the object.  After generated the Cartan object, the involution (k and m) can be altered, and h can be regenerated based on a list of commuting terms in m. h is generally not unique. </li>
    <li> <code>FindParameters</code>: The FindParameters object optimizes the terms in the cartan decomposition to generate a time evolution circuit for the Hamiltonian. For details of the theory, please see the paper. The Find Parameters object relies on a cost function formulated by Earp and Pachos and improved in the original paper by Kokcu et. al. The Find Parameters object takes a filename, a Cartan object (which contains a Hamiltonian object), and allows for changes in the optimizer function (ex. BFGS gradient decent or Powell), or the optimization accuracy. Warning: Runtime scales quickly with system size. </li>
</ol>

package.util contains functions useful for generating the above objects or for verifying the correctness through exact matrix exponentiation. These functions might be generally useful, so they are set-aside from the above objects. 

Finally, the examples file provides code for verifying the correctness of the methods and for understanding the usage. 
"""
#__all__ = ['Hamiltonian','Cartan','FindParameters']
